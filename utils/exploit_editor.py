from prompt_toolkit import PromptSession
from prompt_toolkit.lexers import PygmentsLexer
from prompt_toolkit.styles import Style
from pygments.lexers.c_cpp import CLexer
import prompt_toolkit.shortcuts as shortcuts
from pygments import highlight
from pygments.formatters import TerminalFormatter

class ExploitEditor:
    def __init__(self):
        # Create a custom style for syntax highlighting
        editor_style = Style.from_dict({
            'pygments.comment': 'italic #888',
            'pygments.keyword': 'bold #44f',
            'pygments.operator': '#f80',
            'pygments.string': '#0f0',
            'pygments.number': '#f08',
            'pygments.name.builtin': '#ff0',
        })

        # Create a custom PromptSession for the exploit editor
        self._session = PromptSession(
            lexer=PygmentsLexer(CLexer),
            style=editor_style,
            include_default_pygments_style=False,
            multiline=True,
            wrap_lines=True,
            complete_while_typing=True,
            enable_history_search=True,
            complete_style=shortcuts.CompleteStyle.READLINE_LIKE,
        )

    def get_code(self):
        print("Enter your exploit code (Ctrl-D to finish):")
        code = self._session.prompt('> ', vi_mode=True)
        return code
    
    def show_code(self, code):
         highlighted_code = highlight(code, CLexer(), TerminalFormatter())
         print(highlighted_code)
